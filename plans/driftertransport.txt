DRIFTER TRANSPORT

Producer - no interface, just tells route to make drifter at $Point. Drifter drifts.

Consumer - two options.
          a) Have one method quantity accept(Resource,quantity available) which is called by the drifter and can consume up to available of resource and returns how much it has consumed. 
                             (can remove second arg and change return to bool if drifters are set to only transport 1 of an item)
          b) 2 methods 1 to ask if can consume and another to then consume
I like (a)

WALKER TRANSPORT

Producer - produces walkers
   has to know what consumers are in range and if they are accepting for each product we produce
   Also has to know the route to each consumer. It may be possible to have more than one route so this needs to have some logic for deciding.


Consumer - consumer the resources
  has to know what producers are in range and tell them if they are accepting or not

If a walkers route or destination means it can no-longer deliver make it distruct.


